<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>

    <groupId>uk.co.hrdlicka.tomas.webapp</groupId>
    <artifactId>aui-demo-webapp</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <name>AUI Demo WebApp</name>
    <description>This is an example of AUI (Atlassian User Interface) implementation in a web application based on Spring framework</description>
    <packaging>war</packaging>
    <url>http://tomas.hrdlicka.co.uk</url>

	<organization>
		<name>Tomas 'Xboot' Hrdlicka</name>
		<url>http://tomas.hrdlicka.co.uk</url>
	</organization>

	<issueManagement>
    	<system>JIRA</system>
    	<url>https://jira.tomas.hrdlicka.co.uk/browse/XBOOT</url>
    </issueManagement>

    <scm>
    	<connection>scm:git:https://github.com/xboot-dev/aui-demo-webapp.git</connection>
    </scm>
	
    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>${log4j.version}</version>
        </dependency>
		<dependency>
			<groupId>com.google.collections</groupId>
			<artifactId>google-collections</artifactId>
			<version>1.0</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>${commons.io.version}</version>
		</dependency>
		<dependency>
            <groupId>javax</groupId>
            <artifactId>javaee-web-api</artifactId>
            <version>7.0</version>
            <scope>provided</scope>
        </dependency>
		
        <!-- Spring dependencies -->
        
		<!--Core utilities used by other modules.
			Define this if you use Spring Utility APIs (org.springframework.core.*/org.springframework.util.*)-->
		<dependency>
    		<groupId>org.springframework</groupId>
    		<artifactId>spring-core</artifactId>
    		<version>${org.springframework.version}</version>
		</dependency>
		
		<!--Expression Language (depends on spring-core)
			Define this if you use Spring Expression APIs (org.springframework.expression.*)-->
		<dependency>
    		<groupId>org.springframework</groupId>
    		<artifactId>spring-expression</artifactId>
    		<version>${org.springframework.version}</version>
		</dependency>
		
		<!--Bean Factory and JavaBeans utilities (depends on spring-core)
			Define this if you use Spring Bean APIs (org.springframework.beans.*)-->
		<dependency>
    		<groupId>org.springframework</groupId>
    		<artifactId>spring-beans</artifactId>
    		<version>${org.springframework.version}</version>
		</dependency>
		
		<!--Aspect Oriented Programming (AOP) Framework (depends on spring-core, spring-beans)
			Define this if you use Spring AOP APIs (org.springframework.aop.*)-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!--Application Context (depends on spring-core, spring-expression, spring-aop, spring-beans)
		    This is the central artifact for Spring's Dependency Injection Container and is generally always 
		    Defined-->
		<dependency>
		    <groupId>org.springframework</groupId>
    		<artifactId>spring-context</artifactId>
    		<version>${org.springframework.version}</version>
		</dependency>
		
		<!--Various Application Context utilities, including EhCache, JavaMail, Quartz, and Freemarker integration
			Define this if you need any of these integrations-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		
		<!--Transaction Management Abstraction (depends on spring-core, spring-beans, spring-aop, spring-context)
			Define this if you use Spring Transactions or DAO Exception Hierarchy(org.springframework.transaction.*/org.springframework.dao.*)-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		
		<!--JDBC Data Access Library (depends on spring-core, spring-beans, spring-context, spring-tx)
			Define this if you use Spring's JdbcTemplate API (org.springframework.jdbc.*)-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		
		<!--Object-to-Relation-Mapping (ORM) integration with Hibernate, JPA, and iBatis.(depends on spring-core, spring-beans, spring-context, spring-tx)
			Define this if you need ORM (org.springframework.orm.*)-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		
		<!--Object-to-XML Mapping (OXM) abstraction and integration with JAXB, JiBX, Castor, XStream, and XML Beans.(depends on spring-core, spring-beans, spring-context)
			Define this if you need OXM (org.springframework.oxm.*)-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-oxm</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		
		<!--Web application development utilities applicable to both Servlet and Portlet Environments(depends on spring-core, spring-beans, spring-context)
			Define this if you use Spring MVC, or wish to use Struts, JSF, or another web framework with Spring (org.springframework.web.*)-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		
		<!--Spring MVC for Servlet Environments (depends on spring-core, spring-beans, spring-context, spring-web)
			Define this if you use Spring MVC with a Servlet Container such as Apache Tomcat (org.springframework.web.servlet.*)-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		
		<!--Spring MVC for Portlet Environments (depends on spring-core, spring-beans, spring-context, spring-web)
			Define this if you use Spring MVC with a Portlet Container (org.springframework.web.portlet.*)-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc-portlet</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		
		<!--Support for testing Spring applications with tools such as JUnit and TestNGThis artifact is generally always 
			Defined with a 'test' scope for the integration testing framework and unit testing stubs-->
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-test</artifactId>
		    <version>${org.springframework.version}</version>
		    <scope>test</scope>
		</dependency>

        <!-- Velocity dependencies -->
		<dependency>
			<groupId>org.apache.velocity</groupId>
			<artifactId>velocity</artifactId>
			<version>${velocity.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.velocity</groupId>
			<artifactId>velocity-tools</artifactId>
			<version>2.0</version>
			<exclusions>
				<exclusion>
					<groupId>org.apache.struts</groupId>
					<artifactId>struts-core</artifactId>
				</exclusion>
				<exclusion>
					<groupId>dom4j</groupId>
					<artifactId>dom4j</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- JPA/Hibernate dependencies -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>${hibernate.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-c3p0</artifactId>
			<version>${hibernate.version}</version>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>${h2.version}</version>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql.version}</version>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>${postgresql.version}</version>
		</dependency>
	</dependencies>

    <build>
        <finalName>${project.artifactId}</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>
			<plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <warName>${project.artifactId}</warName>
                    <archive>
						<manifestEntries>
							<Implementation-Build>${build.number}</Implementation-Build>
                    	</manifestEntries>
					</archive>
					<webResources>
						<resource>
							<directory>src/main/webapp/resources/js</directory>
							<targetPath>resources/js</targetPath>
							<filtering>true</filtering>
						</resource>
					</webResources>					
                </configuration>
            </plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.10</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals><goal>copy</goal></goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>org.eclipse.jetty</groupId>
									<artifactId>jetty-runner</artifactId>
									<version>${jetty.runner.version}</version>
									<destFileName>jetty-runner.jar</destFileName>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
				</executions>
			</plugin>
  			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.9.1</version>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
        </plugins>
        <resources>
    		<resource>
    			<directory>src/main/resources</directory>
    			<filtering>true</filtering>
    		</resource>
    	</resources>
    </build>

    <properties>
        <build.number>1.0.0.0</build.number>
        <java.version>1.7</java.version>
        <junit.version>4.11</junit.version>
        <log4j.version>1.2.17</log4j.version>
		<commons.io.version>2.5</commons.io.version>
		<org.springframework.version>4.3.4.RELEASE</org.springframework.version>
        <velocity.version>1.7</velocity.version>
		<hibernate.version>5.1.3.Final</hibernate.version>
		<h2.version>1.4.187</h2.version>
		<mysql.version>6.0.5</mysql.version>
		<postgresql.version>9.4.1212.jre7</postgresql.version>
		<jetty.runner.version>9.2.17.v20160517</jetty.runner.version>
    </properties>

</project>